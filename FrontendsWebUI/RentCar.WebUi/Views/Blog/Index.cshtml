@model List<ResultAllBlogWithAuthorDto>

@{
    ViewData["Title"] = "Blog";
    Layout = "~/Views/UiLayout/Index.cshtml";
    var index = 0;
}

<style>
    .blog-img-hover {
        transition: transform 0.4s ease;
        cursor: pointer;
    }
    .blog-img-hover:hover {
        transform: scale(1.05);
    }
</style>

<section class="py-5 bg-light">
    <div class="container">

        <div class="text-center mb-5">
            <h2 class="fw-bold">RentCar Blog</h2>
            <p class="text-muted">News, tips and automotive stories</p>
        </div>

        <div class="row mb-4 justify-content-end">
            <div class="col-md-4">
                <select class="form-select" id="authorFilter" aria-label="Filter blog posts by author">
                    <option value="">-- Filter by Author --</option>
                    @foreach (var author in Model.Select(x => x.AuthorName).Distinct())
                    {
                        <option value="@author">@author</option>
                    }
                </select>
            </div>
        </div>

        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                var isEven = index % 2 == 0;

                <div class="row align-items-center mb-5 p-4 bg-white shadow-sm rounded-4 flex-md-row @(isEven ? "" : "flex-md-row-reverse")"
                     data-author="@item.AuthorName" role="article" tabindex="0">

                    <div class="col-md-5 mb-3 mb-md-0">
                        <div class="ratio ratio-16x9 rounded overflow-hidden">
                            <img src="@item.AuthorImageUrl"
                                 class="img-fluid w-100 h-100 object-fit-cover blog-img-hover"
                                 alt="@item.Title"
                                 loading="lazy" />
                        </div>
                    </div>

                    <div class="col-md-7">
                        @if (!string.IsNullOrEmpty(item.CategoryName))
                        {
                            <span class="badge bg-secondary text-uppercase mb-2">@item.CategoryName</span>
                        }
                        <h5 class="text-primary fw-bold mb-1">
                            <i class="bi bi-person-circle me-1" aria-hidden="true"></i>@item.AuthorName
                        </h5>
                        <div class="text-muted small mb-2" aria-label="Publish date">
                            <i class="bi bi-calendar3 me-1" aria-hidden="true"></i>@item.CreatedAt.ToString("dd MMM yyyy")
                        </div>
                        <h4 class="fw-semibold mb-2">@item.Title</h4>
                        <p class="text-muted" style="line-height: 1.6;">
                            @(string.IsNullOrWhiteSpace(item.Description)
                                ? "No description."
                                : item.Description.Length > 250
                                    ? item.Description[..250] + "..."
                                    : item.Description)
                        </p>
                        <div class="d-flex gap-2 mt-3">
                            <a href="/Blog/BlogDetail/@item.BlogId" class="btn btn-primary btn-sm px-4" role="button">Read</a>
                            <a href="#" class="btn btn-outline-secondary btn-sm px-4" role="button">Share</a>
                        </div>
                    </div>
                </div>

                index++;
            }
        }
        else
        {
            <div class="text-center">
                <p>No blog posts available.</p>
            </div>
        }
    </div>
</section>

<script>
    document.getElementById("authorFilter").addEventListener("change", function () {
        const selectedAuthor = this.value.toLowerCase();
        const cards = document.querySelectorAll('[data-author]');

        cards.forEach(card => {
            const author = card.getAttribute("data-author").toLowerCase();
            card.style.display = (!selectedAuthor || author === selectedAuthor) ? "flex" : "none";
        });
    });
</script>
